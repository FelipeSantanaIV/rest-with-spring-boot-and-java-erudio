package br.com.erudio.math;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import br.com.erudio.converts.NumberConverter;
import br.com.erudio.exceptions.UnsupportedMathOperationExceptiom;

public class SimpleMath {

	//Soma dos valores A + A
		public Double sum(Double numberOne, Double numberTwo) {
			return numberOne + numberTwo;
		}
		
		// Subtração dos valores A - A
		public Double sub(Double numberOne,Double numberTwo){
			return numberOne - numberTwo;
		}
		
		public Double mult(Double numberOne, Double numberTwo){
			return numberOne * numberTwo;
		}
		
		// Divisão dos valores A / A
		@RequestMapping(value = "/div/{numberOne}/{numberTwo}",
				method=RequestMethod.GET)
		public Double div(
				@PathVariable(value = "numberOne") String numberOne,
				@PathVariable(value = "numberTwo") String numberTwo
				) throws Exception{
			
			if (!NumberConverter.isNumeric(numberOne)|| !NumberConverter.isNumeric(numberTwo)){
				throw new UnsupportedMathOperationExceptiom("Por favor colocar um número válido.");
			}
			return NumberConverter.convertToDouble(numberOne) / NumberConverter.convertToDouble(numberTwo);
		}
		
		// Média dos valores de 5 números
		@RequestMapping(value = "/med/{numberOne}/{numberTwo}/{numberThree}"
				+ "/{numberFour}/{numberFive}",
				method=RequestMethod.GET)
		public Double med(
				@PathVariable(value = "numberOne") String numberOne,
				@PathVariable(value = "numberTwo") String numberTwo,
				@PathVariable(value = "numberThree") String numberThree,
				@PathVariable(value = "numberFour") String numberFour,
				@PathVariable(value = "numberFive") String numberFive
				) throws Exception{
			
			if (!NumberConverter.isNumeric(numberOne)|| !NumberConverter.isNumeric(numberTwo) ||!NumberConverter.isNumeric(numberThree)
					|| !NumberConverter.isNumeric(numberFour) || !NumberConverter.isNumeric(numberFive)){
				throw new UnsupportedMathOperationExceptiom("Por favor colocar um número válido.");
			}
			return (NumberConverter.convertToDouble(numberOne) + NumberConverter.convertToDouble(numberTwo) 
			+ NumberConverter.convertToDouble(numberThree)
			+ NumberConverter.convertToDouble(numberFour) + NumberConverter.convertToDouble(numberFive)) / 5;
		}
		
		// Raiz quadrada de A
			@RequestMapping(value = "/quad/{numberOne}",
					method=RequestMethod.GET)
			public Double quad(
					@PathVariable(value = "numberOne") String numberOne
					) throws Exception{
				
				if (!NumberConverter.isNumeric(numberOne)){
					throw new UnsupportedMathOperationExceptiom("Por favor colocar um número válido.");
				}
				return NumberConverter.convertToDouble(numberOne) * NumberConverter.convertToDouble(numberOne);
			}
}
